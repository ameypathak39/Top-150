151. Reverse Words in a String

Given an input string s, reverse the order of the words.

A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.

Return a string of the words in reverse order concatenated by a single space.

Note that s may contain leading or trailing spaces or multiple spaces between two words. 
The returned string should only have a single space separating the words. Do not include any extra spaces.

Example 1:

Input: s = "the sky is blue"
Output: "blue is sky the"

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

java code

class Solution {
    public String reverseWords(String s) {
        String[] str = s.trim(). split("\\s+");
        String out = "";
        for(int i = str.length - 1; i>0; i--){
            out += str[i] + " ";

        }
        return out + str[0];
    }
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


c++ code

class Solution {
public:
    string reverseWords(string s) {
        stringstream ss(s);
        string word;
        vector<string> words;

        while (ss >> word) {
            words.push_back(word);
        }

        string res;
        for (int i = words.size() - 1; i >= 0; i--) {
            res += words[i];
            if (i != 0) {
                res += " ";
            }
        }

        return res;
    }
};
